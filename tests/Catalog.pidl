struct ImdbInfo {
    uint64      imdbId;
    uint8       type; // movie , shows, episodes
    uint8       ratingM10;
    timestamp   firstReleased;
    uint64      votes;
    string      title;
    string      certificate;
    string      plot;

    // shows epsiodes
    uint16    season;
    uint16    episode;

    // episodes
    uint64    showId;
}

struct FolderInfo {
}

struct Source {
    char type;
    string path;

    timestamp   added;
    timestamp   last_checked;
    uint        frequencyInSecs;
    string      status_info;
}

struct ContentInfo {
    char            type;
    ref<Source>     source;
    ref<FolderInfo> folder;
    string          path;
    uint64        size;
    timestamp       added;
    timestamp       modified;
    string          status_info;
}

struct Folder {
    ref<FolderInfo> info;
    list<ref<ContentInfo>> contents;
}

struct Data {
    refmap<ContentInfo> contentinfo;
    refmap<Source>      sources;
    refmap<FolderInfo>  folderinfo;
    tree<Folder>        rootfolders;
}

struct ScanRequest {
    ref<Source> source;

    timestamp  scanned_at;
    uint32     status_code;
    string     status_info;
}

struct DataStore {
}

attribute database owner = DataStore : object = Source, ContentInfo, FolderInfo

/*
interface Catalog {
    event Changed(int what);

    objectstore Directory   onlinedir;
    objectstore File        onlinefile;
    objectstore ScanRequest onlinescan;

    objectstore Directory   localdir;
    objectstore File        localfile;
    objectstore ScanRequest localscan;

    objectstore ImdbInfo    imdbinfo;

    list<File> Search(string query);
    void RequestDownload(string link);
}
*/

//attribute uuidbasedobject object = Directory, File, ScanRequest, ImdbInfo
//attribute timestamped     object = Directory, File, ScanRequest, ImdbInfo
